# FastFoto Date Scanner - Docker Compose Example
# Copy this file to docker-compose.yml and customize as needed

services:
  fastfoto-scanner:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: fastfoto-date-scanner
    restart: unless-stopped
    ports:
      - "${FLASK_PORT:-5000}:5000"
    volumes:
      # Mount data directory for persistent storage
      - ./data/photos/unprocessed:/app/data/photos/unprocessed
      - ./data/photos/processed:/app/data/photos/processed
      - ./data/db:/app/data/db
      - ./data/thumbs:/app/data/thumbs
    environment:
      # Pagination Settings
      - PHOTOS_PER_PAGE=${PHOTOS_PER_PAGE:-250}
      
      # Directory Paths (Docker paths)
      - PHOTOS_UNPROCESSED_DIR=/app/data/photos/unprocessed
      - PHOTOS_PROCESSED_DIR=/app/data/photos/processed
      
      # Similarity Analysis Settings
      - SIMILARITY_EPS=${SIMILARITY_EPS:-0.3}
      - SIMILARITY_MIN_SAMPLES=${SIMILARITY_MIN_SAMPLES:-2}
      
      # Flask Settings
      - FLASK_SECRET_KEY=${FLASK_SECRET_KEY:-docker-default-secret-key-change-me}
      - FLASK_DEBUG=${FLASK_DEBUG:-false}
      - FLASK_HOST=0.0.0.0
      - FLASK_PORT=5000
      
      # Scheduled Tasks Settings
      - SCAN_INTERVAL_HOURS=${SCAN_INTERVAL_HOURS:-1}
      
      # File Filtering Settings
      - IGNORE_FILE_PATTERNS=${IGNORE_FILE_PATTERNS:-SYNOFILE_,.DS_Store,Thumbs.db}
      
      # Python and Container Settings
      - PYTHONUNBUFFERED=1
      - PYTHONDONTWRITEBYTECODE=1
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:5000/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 40s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    labels:
      - "com.scanner.description=Fast Date Fixer for Epson FastFoto users"
      - "com.scanner.version=1.0"

# Optional: Add a volume for better data management
volumes:
  scanner-data:
    driver: local